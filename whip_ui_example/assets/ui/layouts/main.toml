# Main layout file that recreates the current hardcoded scene
# Converted to hierarchical format

[window]
# Window configuration
size = [600.0, 300.0]  # Window size from main.rs
background_color = { r = 33, g = 41, b = 42, a = 1.0 }  # Dark grey background

[root]
# Root container that holds all widgets
id = "main_container"
widget_type = { type = "Container", direction = "Column" }

[root.layout]
size = [600.0, 300.0]
position = [0.0, 0.0, 0.0]

[root.style]
background_color = { r = 33, g = 41, b = 42, a = 0.0 }  # Transparent (window handles background)

[root.behavior]
visible = true
interactive = false
position_control = "Layout"

# Triangle - Orange draggable shape
[[root.children]]
id = "triangle"
widget_type = { type = "Shape", shape_type = "Triangle" }

[root.children.layout]
size = [50.0, 50.0]
position = [300.0, 150.0, -1.0]  # Original Bevy coordinates for testing

[root.children.style]
background_color = { r = 255, g = 152, b = 0, a = 1.0 }  # Orange color from main.rs

# State-based styling for triangle
[root.children.style.states]
[root.children.style.states.hover]
background_color = { r = 255, g = 200, b = 100, a = 1.0 }  # Lighter orange on hover
opacity = 0.9

[root.children.style.states.pressed]
background_color = { r = 200, g = 100, b = 0, a = 1.0 }  # Darker orange when pressed
opacity = 0.8

[root.children.behavior]
visible = true
interactive = true
draggable = true
clickable = true
z_index = -1
position_control = "Manual"

# Action bindings for triangle
[root.children.bindings]
click = { event = "click", action = "debug", params = { message = "Triangle clicked!" } }

# Square - Green draggable shape
[[root.children]]
id = "square"
widget_type = { type = "Shape", shape_type = "Rectangle" }

[root.children.layout]
size = [50.0, 50.0]
position = [125.0, 75.0, -2.0]  # Original Bevy coordinates for testing

[root.children.style]
background_color = { r = 66, g = 201, b = 34, a = 1.0 }  # Green color from main.rs

# State-based styling for square
[root.children.style.states]
[root.children.style.states.hover]
background_color = { r = 100, g = 255, b = 100, a = 1.0 }  # Lighter green on hover
opacity = 0.9

[root.children.style.states.pressed]
background_color = { r = 30, g = 150, b = 10, a = 1.0 }  # Darker green when pressed
opacity = 0.8

[root.children.behavior]
visible = true
interactive = true
draggable = true
clickable = true
z_index = -2
position_control = "Manual"

# Action bindings for square
[root.children.bindings]
click = { event = "click", action = "toggle_visibility", params = { target_id = "sample_text" } }

# Sample Text - Editable collaborative text
[[root.children]]
id = "sample_text"
widget_type = { type = "Text", content = "Hello, whip_ui!\nThis is collaborative text.", editable = true }

[root.children.layout]
size = [200.0, 48.0]  # Taffy layout size (dynamic text bounds calculated separately)
position = [50.0, 50.0, -2.0]  # Testing if text coordinates are inverted

[root.children.style]
text_color = "#3182CE"
text_size = 24.0  # Size from main.rs
background_color = { r = 0, g = 0, b = 0, a = 0.0 }  # Transparent background

# State-based styling for text
[root.children.style.states]
[root.children.style.states.focused]
background_color = { r = 200, g = 220, b = 255, a = 0.3 }  # Light blue background when focused
text_color = "#1A365D"  # Darker blue text when focused

[root.children.style.states.hover]
text_color = "#2B6CB0"  # Slightly lighter blue on hover

[root.children.behavior]
visible = true
interactive = true
clickable = true
focusable = true
draggable = false
z_index = -2

# Action bindings for text
[root.children.bindings]
click = { event = "click", action = "set_focus", params = { target_id = "sample_text" } }

# All widgets are children of the root container
# Rendering order is determined by z_index values